{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "12231490621592366523"
    }
  },
  "parameters": {
    "appId": {
      "type": "string",
      "metadata": {
        "description": "Required. Active Directory App ID."
      }
    },
    "appPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Required. Active Directory App Secret Value."
      }
    },
    "cosmosDBAccountName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Azure CosmosDB."
      }
    },
    "cosmosDBContainerName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Azure CosmosDB container."
      }
    },
    "botId": {
      "type": "string",
      "defaultValue": "[format('BotId-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Optional. The globally unique and immutable bot ID. Also used to configure the displayName of the bot, which is mutable."
      }
    },
    "botSKU": {
      "type": "string",
      "defaultValue": "F0",
      "allowedValues": [
        "F0",
        "S1"
      ],
      "metadata": {
        "description": "Optional, defaults to F0. The pricing tier of the Bot Service Registration. Acceptable values are F0 and S1."
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[format('AppServicePlan-Backend-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Optional. The name of the new App Service Plan."
      }
    },
    "appServicePlanSKU": {
      "type": "string",
      "defaultValue": "S3",
      "allowedValues": [
        "B3",
        "S3",
        "P2v3"
      ],
      "metadata": {
        "description": "Optional, defaults to S3. The SKU of the App Service Plan. Acceptable values are B3, S3 and P2v3."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional, defaults to resource group location. The location of the resources."
      }
    }
  },
  "variables": {
    "publishingUsername": "[format('${0}', parameters('botId'))]",
    "webAppName": "[format('webApp-Backend-{0}', parameters('botId'))]",
    "siteHost": "[format('{0}.azurewebsites.net', variables('webAppName'))]",
    "botEndpoint": "[format('https://{0}/api/messages', variables('siteHost'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('appServicePlanSKU')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('webAppName')]",
      "location": "[parameters('location')]",
      "kind": "app,linux",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[format('{0}.azurewebsites.net', variables('webAppName'))]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[format('{0}.scm.azurewebsites.net', variables('webAppName'))]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "reserved": true,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "siteConfig": {
          "appSettings": [
            {
              "name": "MicrosoftAppId",
              "value": "[parameters('appId')]"
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[parameters('appPassword')]"
            },
            {
              "name": "AZURE_COSMOSDB_ENDPOINT",
              "value": "[format('https://{0}.documents.azure.com:443/', parameters('cosmosDBAccountName'))]"
            },
            {
              "name": "AZURE_COSMOSDB_NAME",
              "value": "[parameters('cosmosDBAccountName')]"
            },
            {
              "name": "AZURE_COSMOSDB_CONTAINER_NAME",
              "value": "[parameters('cosmosDBContainerName')]"
            },
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "true"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "https://botservice.hosting.portal.azure.net",
              "https://hosting.onecloud.azure-test.net/"
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ]
    },
    {
      "type": "Microsoft.BotService/botServices",
      "apiVersion": "2022-09-15",
      "name": "[parameters('botId')]",
      "location": "global",
      "kind": "azurebot",
      "sku": {
        "name": "[parameters('botSKU')]"
      },
      "properties": {
        "displayName": "[parameters('botId')]",
        "iconUrl": "https://docs.botframework.com/static/devportal/client/images/bot-framework-default.png",
        "endpoint": "[variables('botEndpoint')]",
        "msaAppId": "[parameters('appId')]",
        "luisAppIds": [],
        "schemaTransformationVersion": "1.3",
        "isCmekEnabled": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
      ]
    }
  ]
}
